# This policy uses the Sentinel tfrun import to restrict the
# proposed monthly cost that would be incurred if the current
# plan were applied, using a variable budget.

##### Imports #####

import "tfrun"
import "decimal"

##### Functions #####

# Validate that the proposed monthly cost is less than the limit
limit_cost_by_workspace_type = func(limit) {

	# Get workspace name
	workspace_name = tfrun.workspace.name

	# Determine proposed monthly cost
	proposed_cost = decimal.new(tfrun.cost_estimate.proposed_monthly_cost)

	# Compare proposed monthly cost to the limit
	if proposed_cost.lte(limit) {
		print("Proposed monthly cost", proposed_cost.string,
			"USD of workspace", workspace_name,
			"is under the limit:", limit.string, "USD")
		return true
	} else {
		print("Proposed monthly cost", proposed_cost.string,
			"USD of workspace", workspace_name,
			"is over the limit:", limit.string, "USD")
		return false
	}
}

##### Monthly Limit #####
limit = decimal.new(300)

##### Rules #####
cost_validated = limit_cost_by_workspace_type(limit)
main = rule {
	cost_validated
}
